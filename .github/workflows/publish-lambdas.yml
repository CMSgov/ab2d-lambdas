name: publish-lambdas

on:
  pull_request:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - dev
          - test
          - prod

jobs:
  publish:
    runs-on: self-hosted

    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      AWS_REGION: ${{ vars.AWS_REGION }}
      DEPLOYMENT_ENV: ${{ vars[format('{0}_DEPLOYMENT_ENV', github.event.inputs.environment || inputs.environment)] }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          distribution: 'adopt'
          java-version: '17'

      - uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # v4.2.2
        with:
          gradle-version: 7.5

      - uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
        with:
          params: |
            ARTIFACTORY_URL=/artifactory/url
            ARTIFACTORY_USER=/artifactory/user
            ARTIFACTORY_PASSWORD=/artifactory/password
            SONAR_HOST_URL=/sonarqube/url
            SONAR_TOKEN=/sonarqube/token

      - name: Verify Required Libraries
        run: |
          echo "Checking for required system libraries..."
          ldd --version || echo "ldd (glibc) is not installed!"
          ldconfig -p | grep "libstdc++" || echo "libstdc++ is missing!"
          ldconfig -p | grep "zlib" || echo "zlib is missing!"

      - name: Build Lambdas
        run: |
          ./gradlew -b build.gradle

      - name: Test Lambdas
        run: |
          ./gradlew clean test --info -b build.gradle

      - name: Build Jars
        run: |
          ./gradlew buildZip --info -b build.gradle

      - name: SonarQube Analysis
        run: |
          ./gradlew sonarqube -Dsonar.projectKey=ab2d-lambdas -Dsonar.host.url=https://sonarqube.cloud.cms.gov

      - name: Quality Gate
        run: |
          echo "Waiting for SonarQube Quality Gate..."
          sleep 600  # Simulate a 10-minute wait (adjust based on actual implementation)

      - name: SBOM
        run: |
          ./gradlew cyclonedxBom --info -b build.gradle

      - name: Publish Lambdas
        run: |
          echo "Checking for unpublished artifacts..."
          DEPLOY_SCRIPT=""
          VERSION_PUBLISHED_LIST=$(./gradlew -q lookForArtifacts | tr -d '\r')

          while IFS= read -r line; do
            ARTIFACTORY_INFO=($(echo $line | tr ":" "\n"))
            if [[ "${ARTIFACTORY_INFO[1]}" == "false" ]]; then
              echo "Deploying ${ARTIFACTORY_INFO[0]}"
              DEPLOY_SCRIPT+="${ARTIFACTORY_INFO[0]}:artifactoryPublish "
            fi
          done <<< "$VERSION_PUBLISHED_LIST"

          if [[ -n "$DEPLOY_SCRIPT" ]]; then
            echo "Publishing: $DEPLOY_SCRIPT"
            ./gradlew $DEPLOY_SCRIPT -b build.gradle \
              -Dusername="${ARTIFACTORY_USER}" \
              -Dpassword="${ARTIFACTORY_PASSWORD}" \
              -Drepository_url="${ARTIFACTORY_URL}"
          else
            echo "No new artifacts to publish."
          fi

          BUILD_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "Build version: $BUILD_VERSION"
