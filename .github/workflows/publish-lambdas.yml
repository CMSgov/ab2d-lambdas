name: publish-lambdas

on:
  pull_request:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - dev
          - test
          - prod

jobs:
  publish:
    runs-on: self-hosted

    env:
      ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      AWS_REGION: ${{ vars.AWS_REGION }}
      DEPLOYMENT_ENV: ${{ vars[format('{0}_DEPLOYMENT_ENV', inputs.environment)] }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: '7.2'

      - name: Build Lambdas
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          ./gradlew -b build.gradle

      - name: Test Lambdas
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          ./gradlew clean test --info -b build.gradle

      - name: Build Jars
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          ./gradlew buildZip --info -b build.gradle

      - name: SonarQube Analysis
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          ./gradlew sonarqube -Dsonar.projectKey=ab2d-lambdas -Dsonar.host.url=https://sonarqube.cloud.cms.gov

      - name: Quality Gate
        run: |
          echo "Waiting for SonarQube Quality Gate..."
          sleep 600  # Simulate a 10-minute wait (adjust based on actual implementation)

      - name: SBOM
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          ./gradlew cyclonedxBom --info -b build.gradle

      - name: Publish Lambdas
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          echo "Checking for unpublished artifacts..."
          DEPLOY_SCRIPT=""
          VERSION_PUBLISHED_LIST=$(./gradlew -q lookForArtifacts | tr -d '\r')

          while IFS= read -r line; do
            ARTIFACTORY_INFO=($(echo $line | tr ":" "\n"))
            if [[ "${ARTIFACTORY_INFO[1]}" == "false" ]]; then
              echo "Deploying ${ARTIFACTORY_INFO[0]}"
              DEPLOY_SCRIPT+="${ARTIFACTORY_INFO[0]}:artifactoryPublish "
            fi
          done <<< "$VERSION_PUBLISHED_LIST"

          if [[ -n "$DEPLOY_SCRIPT" ]]; then
            echo "Publishing: $DEPLOY_SCRIPT"
            ./gradlew $DEPLOY_SCRIPT -b build.gradle \
              -Dusername="${ARTIFACTORY_USER}" \
              -Dpassword="${ARTIFACTORY_PASSWORD}" \
              -Drepository_url="${ARTIFACTORY_URL}"
          else
            echo "No new artifacts to publish."
          fi

          BUILD_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          echo "Build version: $BUILD_VERSION"
