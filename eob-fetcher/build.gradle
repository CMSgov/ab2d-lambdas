plugins {
    id 'java'
}

version "$fetcherVersion"

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'org.springframework:spring-context:5.3.25'
    implementation 'com.newrelic.agent.java:newrelic-api:8.2.0'
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3:6.6.0'
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-structures-r4:6.1.3'
    implementation 'gov.cms.ab2d:ab2d-aggregator:1.2.5'
    implementation 'gov.cms.ab2d:ab2d-bfd:2.0.2'
    implementation("gov.cms.ab2d:ab2d-events-client:${ab2dEventClientVersion}")
    implementation 'gov.cms.ab2d:ab2d-fhir:1.1.5'
    implementation 'gov.cms.ab2d:ab2d-filters:1.6.5'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.1'
    annotationProcessor "org.projectlombok:lombok:1.18.24"
}

test {
    useJUnitPlatform()
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    archiveFileName = 'eob-fetcher.zip'
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.5'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

build.dependsOn buildZip

tasks.withType(JavaCompile) {
    options.compilerArgs += [
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED'
            // Add more --add-opens options as needed
    ]
}

tasks.withType(Test) {
    jvmArgs += [
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED'
            // Add more --add-opens options as needed
    ]
}
