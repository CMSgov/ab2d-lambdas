plugins {
    id 'java'
    id 'java-library'
}

version "$databaseVersion"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.liquibase:liquibase-core:4.18.0'
    implementation 'org.liquibase:liquibase-core:4.18.0'
    implementation "org.postgresql:postgresql:${postgresVersion}"
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.liquibase:liquibase-core:4.18.0'
    testImplementation 'org.liquibase:liquibase-core:4.18.0'
    testImplementation "org.postgresql:postgresql:${postgresVersion}"
    testImplementation project(':lambda-test-utils')
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterApiVersion}"
    testImplementation "org.junit.platform:junit-platform-commons:${junitPlatformCommonsVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterEngineVersion}"
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation "org.testcontainers:postgresql:1.17.6"


    implementation project(':lambda-lib')
}

test {
    useJUnitPlatform()
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}
task buildZip(type: Zip) {

    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    archiveFileName = 'database-management.zip'
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.5'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

build.dependsOn buildZip

tasks.withType(JavaCompile) {
    options.compilerArgs += [
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED'
            // Add more --add-opens options as needed
    ]
}

tasks.withType(Test) {
    jvmArgs += [
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED'
            // Add more --add-opens options as needed
    ]
}
